{
    "contracts": {
        "/home/neeraj/starter_kit/src/contracts/EVMContract.sol": {
            "EVMContract": {
                "abi": [
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "hasVoted",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "canVote",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "startVoting",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "ethAddress",
                                "type": "address"
                            }
                        ],
                        "name": "getCandidateData",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "name": "name",
                                        "type": "string"
                                    },
                                    {
                                        "name": "voteCount",
                                        "type": "uint256"
                                    },
                                    {
                                        "name": "hasRegistered",
                                        "type": "bool"
                                    },
                                    {
                                        "name": "ethAddress",
                                        "type": "address"
                                    }
                                ],
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "candidateEthAddress",
                                "type": "address"
                            }
                        ],
                        "name": "vote",
                        "outputs": [
                            {
                                "components": [
                                    {
                                        "name": "name",
                                        "type": "string"
                                    },
                                    {
                                        "name": "voteCount",
                                        "type": "uint256"
                                    },
                                    {
                                        "name": "hasRegistered",
                                        "type": "bool"
                                    },
                                    {
                                        "name": "ethAddress",
                                        "type": "address"
                                    }
                                ],
                                "name": "",
                                "type": "tuple"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "isRegistrationOpen",
                        "outputs": [
                            {
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "closeRegistration",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [],
                        "name": "closeVoting",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [
                            {
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "candidateAddresses",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "winner",
                        "outputs": [
                            {
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "name": "voteCount",
                                "type": "uint256"
                            },
                            {
                                "name": "hasRegistered",
                                "type": "bool"
                            },
                            {
                                "name": "ethAddress",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": false,
                        "inputs": [
                            {
                                "name": "_name",
                                "type": "string"
                            }
                        ],
                        "name": "register",
                        "outputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "admin",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "constant": true,
                        "inputs": [],
                        "name": "getCandidateList",
                        "outputs": [
                            {
                                "name": "",
                                "type": "address[]"
                            }
                        ],
                        "payable": false,
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "payable": false,
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    }
                ],
                "devdoc": {
                    "methods": {}
                },
                "evm": {
                    "bytecode": {
                        "linkReferences": {},
                        "object": "60806040526000805460a060020a61ffff021916905534801561002157600080fd5b506000805460a060020a60ff0219600160a060020a031990911633171674010000000000000000000000000000000000000000179055610efd806100666000396000f3fe6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166309eef43e81146100c9578063159e7064146100ff5780631ec6b60a146101145780632a466ac71461012b5780636dd7d8ea146101585780637ab2af2b146101785780637dc673bc1461018d578063c631b292146101a2578063d55d73c5146101b7578063dfbf53ae146101e4578063f2c298be14610209578063f851a44014610229578063fdbc40061461023e575b600080fd5b3480156100d557600080fd5b506100e96100e4366004610b1a565b610260565b6040516100f69190610d76565b60405180910390f35b34801561010b57600080fd5b506100e9610275565b34801561012057600080fd5b50610129610297565b005b34801561013757600080fd5b5061014b610146366004610b1a565b610345565b6040516100f69190610df7565b34801561016457600080fd5b5061014b610173366004610b1a565b610432565b34801561018457600080fd5b506100e9610609565b34801561019957600080fd5b5061012961062a565b3480156101ae57600080fd5b50610129610661565b3480156101c357600080fd5b506101d76101d2366004610b75565b610699565b6040516100f69190610d51565b3480156101f057600080fd5b506101f96106c1565b6040516100f69493929190610d84565b34801561021557600080fd5b50610129610224366004610b40565b610771565b34801561023557600080fd5b506101d7610901565b34801561024a57600080fd5b50610253610910565b6040516100f69190610d65565b60056020526000908152604090205460ff1681565b6000547501000000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146102ae57600080fd5b60005474010000000000000000000000000000000000000000900460ff161561030c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610dc7565b60405180910390fd5b6000805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179055565b61034d610973565b600160a060020a0382166000908152600460209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160a0908101909452608081018381529093919284928491908401828280156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b50505091835250506001820154602082015260029091015460ff8116151560408301526101009004600160a060020a031660609091015292915050565b61043a610973565b3360009081526005602052604090205460ff161561045757600080fd5b600160a060020a03821660009081526004602052604090206001808201805490910190819055600254101561050957805481906001906104ac908290849060026000196101008386161502019091160461099a565b50600182810154908201556002918201805492909101805460ff909316151560ff19909316929092178083559054600160a060020a0361010091829004160274ffffffffffffffffffffffffffffffffffffffff00199091161790555b3360009081526005602090815260408083208054600160ff199091168117909155600160a060020a038716845260048352928190208151815460026101009682161596909602600019011694909404601f8101849004909302840160a090810190925260808401838152909284928491908401828280156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b50505091835250506001820154602082015260029091015460ff8116151560408301526101009004600160a060020a03166060909101529392505050565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461064157600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b600054600160a060020a0316331461067857600080fd5b6000805475ff00000000000000000000000000000000000000000019169055565b60068054829081106106a757fe5b600091825260209091200154600160a060020a0316905081565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281529183918301828280156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b50505050600183015460029093015491929160ff811691506101009004600160a060020a031684565b3360009081526004602052604090206002015460ff16156107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610de7565b60005474010000000000000000000000000000000000000000900460ff161515610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610dd7565b6040805160808101825282815260006020808301829052600183850152336060840181905282526004815292902081518051929391926108579284920190610a1f565b506020820151600180830191909155604083015160029092018054606090940151600160a060020a03166101000274ffffffffffffffffffffffffffffffffffffffff001993151560ff1990951694909417929092169290921790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19163317905550565b600054600160a060020a031681565b6060600680548060200260200160405190810160405280929190818152602001828054801561096857602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161094a575b505050505090505b90565b60408051608081018252606080825260006020830181905292820183905281019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109d35780548555610a0f565b82800160010185558215610a0f57600052602060002091601f016020900482015b82811115610a0f5782548255916001019190600101906109f4565b50610a1b929150610a8d565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a6057805160ff1916838001178555610a0f565b82800160010185558215610a0f579182015b82811115610a0f578251825591602001919060010190610a72565b61097091905b80821115610a1b5760008155600101610a93565b6000610ab38235610e61565b9392505050565b6000601f82018313610acb57600080fd5b8135610ade610ad982610e2f565b610e08565b91508082526020830160208301858383011115610afa57600080fd5b610b05838284610e7d565b50505092915050565b6000610ab38235610970565b600060208284031215610b2c57600080fd5b6000610b388484610aa7565b949350505050565b600060208284031215610b5257600080fd5b813567ffffffffffffffff811115610b6957600080fd5b610b3884828501610aba565b600060208284031215610b8757600080fd5b6000610b388484610b0e565b610b9c81610e61565b82525050565b6000610bad82610e5d565b808452602084019350610bbf83610e57565b60005b82811015610bef57610bd5868351610b93565b610bde82610e57565b602096909601959150600101610bc2565b5093949350505050565b610b9c81610e6c565b6000610c0d82610e5d565b808452610c21816020860160208601610e89565b610c2a81610eb9565b9093016020019392505050565b601d81527f526567697374726174696f6e206861736e277420656e64656420796574000000602082015260400190565b602481527f526567697374726174696f6e7320617265206e6f74206f70656e20726967687460208201527f206e6f7700000000000000000000000000000000000000000000000000000000604082015260600190565b60208082527f43616e6469646174652068617320616c726561647920726567697374657265649082015260400190565b8051608080845260009190840190610d058282610c02565b9150506020830151610d1a6020860182610d48565b506040830151610d2d6040860182610bf9565b506060830151610d406060860182610b93565b509392505050565b610b9c81610970565b60208101610d5f8284610b93565b92915050565b60208082528101610ab38184610ba2565b60208101610d5f8284610bf9565b60808082528101610d958187610c02565b9050610da46020830186610d48565b610db16040830185610bf9565b610dbe6060830184610b93565b95945050505050565b60208082528101610d5f81610c37565b60208082528101610d5f81610c67565b60208082528101610d5f81610cbd565b60208082528101610ab38184610ced565b60405181810167ffffffffffffffff81118282101715610e2757600080fd5b604052919050565b600067ffffffffffffffff821115610e4657600080fd5b506020601f91909101601f19160190565b60200190565b5190565b6000610d5f82610e71565b151590565b600160a060020a031690565b82818337506000910152565b60005b83811015610ea4578181015183820152602001610e8c565b83811115610eb3576000848401525b50505050565b601f01601f19169056fea265627a7a723058204c3393c8c231026c1a2536867bb4f2a087ee54f95de8ce3df4ed0112394c933c6c6578706572696d656e74616cf50037",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH2 0xFFFF MUL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH1 0xFF MUL NOT PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT SWAP1 SWAP2 AND CALLER OR AND PUSH21 0x10000000000000000000000000000000000000000 OR SWAP1 SSTORE PUSH2 0xEFD DUP1 PUSH2 0x66 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x9EEF43E DUP2 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x159E7064 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x2A466AC7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x7AB2AF2B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x7DC673BC EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xC631B292 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xD55D73C5 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2C298BE EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xFDBC4006 EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x62A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH22 0xFF000000000000000000000000000000000000000000 NOT AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x34D PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x973 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x509 JUMPI DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4AC SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP4 DUP7 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x99A JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP1 DUP4 SSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD DUP4 DUP2 MSTORE SWAP1 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH22 0xFF000000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6A7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP2 AND SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 DUP4 DUP6 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x857 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0xA1F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x9D3 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA0F JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH2 0xA1B SWAP3 SWAP2 POP PUSH2 0xA8D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xA60 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA0F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA0F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x970 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 CALLDATALOAD PUSH2 0xE61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xADE PUSH2 0xAD9 DUP3 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB05 DUP4 DUP3 DUP5 PUSH2 0xE7D JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 CALLDATALOAD PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP5 DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB38 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP5 DUP5 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD DUP3 PUSH2 0xE5D JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xBBF DUP4 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBD5 DUP7 DUP4 MLOAD PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xBDE DUP3 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0xBC2 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D DUP3 PUSH2 0xE5D JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0xC21 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE89 JUMP JUMPDEST PUSH2 0xC2A DUP2 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x526567697374726174696F6E206861736E277420656E64656420796574000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP2 MSTORE PUSH32 0x526567697374726174696F6E7320617265206E6F74206F70656E207269676874 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x206E6F7700000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x43616E6469646174652068617320616C72656164792072656769737465726564 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP1 DUP5 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xD05 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xD1A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xD48 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xD2D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xD40 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xB93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD5F DUP3 DUP5 PUSH2 0xB93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAB3 DUP2 DUP5 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD5F DUP3 DUP5 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD95 DUP2 DUP8 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP PUSH2 0xDA4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0xDB1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0xDBE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB93 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAB3 DUP2 DUP5 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F DUP3 PUSH2 0xE71 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE8C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0x4c CALLER SWAP4 0xc8 0xc2 BALANCE MUL PUSH13 0x1A2536867BB4F2A087EE54F95D 0xe8 0xce RETURNDATASIZE DELEGATECALL 0xed ADD SLT CODECOPY 0x4c SWAP4 EXTCODECOPY PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
                        "sourceMap": "58:2234:0:-;;;279:5;246:38;;-1:-1:-1;;;;;;290:27:0;;;489:91;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;520:5:0;:18;;-1:-1:-1;;;;;;;;;;;;520:18:0;;;528:10;520:18;548:25;;;;;58:2234;;;;;;"
                    },
                    "deployedBytecode": {
                        "linkReferences": {},
                        "object": "6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166309eef43e81146100c9578063159e7064146100ff5780631ec6b60a146101145780632a466ac71461012b5780636dd7d8ea146101585780637ab2af2b146101785780637dc673bc1461018d578063c631b292146101a2578063d55d73c5146101b7578063dfbf53ae146101e4578063f2c298be14610209578063f851a44014610229578063fdbc40061461023e575b600080fd5b3480156100d557600080fd5b506100e96100e4366004610b1a565b610260565b6040516100f69190610d76565b60405180910390f35b34801561010b57600080fd5b506100e9610275565b34801561012057600080fd5b50610129610297565b005b34801561013757600080fd5b5061014b610146366004610b1a565b610345565b6040516100f69190610df7565b34801561016457600080fd5b5061014b610173366004610b1a565b610432565b34801561018457600080fd5b506100e9610609565b34801561019957600080fd5b5061012961062a565b3480156101ae57600080fd5b50610129610661565b3480156101c357600080fd5b506101d76101d2366004610b75565b610699565b6040516100f69190610d51565b3480156101f057600080fd5b506101f96106c1565b6040516100f69493929190610d84565b34801561021557600080fd5b50610129610224366004610b40565b610771565b34801561023557600080fd5b506101d7610901565b34801561024a57600080fd5b50610253610910565b6040516100f69190610d65565b60056020526000908152604090205460ff1681565b6000547501000000000000000000000000000000000000000000900460ff1681565b600054600160a060020a031633146102ae57600080fd5b60005474010000000000000000000000000000000000000000900460ff161561030c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610dc7565b60405180910390fd5b6000805475ff00000000000000000000000000000000000000000019167501000000000000000000000000000000000000000000179055565b61034d610973565b600160a060020a0382166000908152600460209081526040918290208251815460026001821615610100026000190190911604601f8101849004909302810160a0908101909452608081018381529093919284928491908401828280156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b50505091835250506001820154602082015260029091015460ff8116151560408301526101009004600160a060020a031660609091015292915050565b61043a610973565b3360009081526005602052604090205460ff161561045757600080fd5b600160a060020a03821660009081526004602052604090206001808201805490910190819055600254101561050957805481906001906104ac908290849060026000196101008386161502019091160461099a565b50600182810154908201556002918201805492909101805460ff909316151560ff19909316929092178083559054600160a060020a0361010091829004160274ffffffffffffffffffffffffffffffffffffffff00199091161790555b3360009081526005602090815260408083208054600160ff199091168117909155600160a060020a038716845260048352928190208151815460026101009682161596909602600019011694909404601f8101849004909302840160a090810190925260808401838152909284928491908401828280156105cb5780601f106105a0576101008083540402835291602001916105cb565b820191906000526020600020905b8154815290600101906020018083116105ae57829003601f168201915b50505091835250506001820154602082015260029091015460ff8116151560408301526101009004600160a060020a03166060909101529392505050565b60005474010000000000000000000000000000000000000000900460ff1681565b600054600160a060020a0316331461064157600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b600054600160a060020a0316331461067857600080fd5b6000805475ff00000000000000000000000000000000000000000019169055565b60068054829081106106a757fe5b600091825260209091200154600160a060020a0316905081565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281529183918301828280156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b50505050600183015460029093015491929160ff811691506101009004600160a060020a031684565b3360009081526004602052604090206002015460ff16156107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610de7565b60005474010000000000000000000000000000000000000000900460ff161515610814576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030390610dd7565b6040805160808101825282815260006020808301829052600183850152336060840181905282526004815292902081518051929391926108579284920190610a1f565b506020820151600180830191909155604083015160029092018054606090940151600160a060020a03166101000274ffffffffffffffffffffffffffffffffffffffff001993151560ff1990951694909417929092169290921790556006805491820181556000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01805473ffffffffffffffffffffffffffffffffffffffff19163317905550565b600054600160a060020a031681565b6060600680548060200260200160405190810160405280929190818152602001828054801561096857602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161094a575b505050505090505b90565b60408051608081018252606080825260006020830181905292820183905281019190915290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106109d35780548555610a0f565b82800160010185558215610a0f57600052602060002091601f016020900482015b82811115610a0f5782548255916001019190600101906109f4565b50610a1b929150610a8d565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610a6057805160ff1916838001178555610a0f565b82800160010185558215610a0f579182015b82811115610a0f578251825591602001919060010190610a72565b61097091905b80821115610a1b5760008155600101610a93565b6000610ab38235610e61565b9392505050565b6000601f82018313610acb57600080fd5b8135610ade610ad982610e2f565b610e08565b91508082526020830160208301858383011115610afa57600080fd5b610b05838284610e7d565b50505092915050565b6000610ab38235610970565b600060208284031215610b2c57600080fd5b6000610b388484610aa7565b949350505050565b600060208284031215610b5257600080fd5b813567ffffffffffffffff811115610b6957600080fd5b610b3884828501610aba565b600060208284031215610b8757600080fd5b6000610b388484610b0e565b610b9c81610e61565b82525050565b6000610bad82610e5d565b808452602084019350610bbf83610e57565b60005b82811015610bef57610bd5868351610b93565b610bde82610e57565b602096909601959150600101610bc2565b5093949350505050565b610b9c81610e6c565b6000610c0d82610e5d565b808452610c21816020860160208601610e89565b610c2a81610eb9565b9093016020019392505050565b601d81527f526567697374726174696f6e206861736e277420656e64656420796574000000602082015260400190565b602481527f526567697374726174696f6e7320617265206e6f74206f70656e20726967687460208201527f206e6f7700000000000000000000000000000000000000000000000000000000604082015260600190565b60208082527f43616e6469646174652068617320616c726561647920726567697374657265649082015260400190565b8051608080845260009190840190610d058282610c02565b9150506020830151610d1a6020860182610d48565b506040830151610d2d6040860182610bf9565b506060830151610d406060860182610b93565b509392505050565b610b9c81610970565b60208101610d5f8284610b93565b92915050565b60208082528101610ab38184610ba2565b60208101610d5f8284610bf9565b60808082528101610d958187610c02565b9050610da46020830186610d48565b610db16040830185610bf9565b610dbe6060830184610b93565b95945050505050565b60208082528101610d5f81610c37565b60208082528101610d5f81610c67565b60208082528101610d5f81610cbd565b60208082528101610ab38184610ced565b60405181810167ffffffffffffffff81118282101715610e2757600080fd5b604052919050565b600067ffffffffffffffff821115610e4657600080fd5b506020601f91909101601f19160190565b60200190565b5190565b6000610d5f82610e71565b151590565b600160a060020a031690565b82818337506000910152565b60005b83811015610ea4578181015183820152602001610e8c565b83811115610eb3576000848401525b50505050565b601f01601f19169056fea265627a7a723058204c3393c8c231026c1a2536867bb4f2a087ee54f95de8ce3df4ed0112394c933c6c6578706572696d656e74616cf50037",
                        "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC4 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x9EEF43E DUP2 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x159E7064 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x1EC6B60A EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x2A466AC7 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x6DD7D8EA EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x7AB2AF2B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x7DC673BC EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xC631B292 EQ PUSH2 0x1A2 JUMPI DUP1 PUSH4 0xD55D73C5 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xF2C298BE EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xFDBC4006 EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x275 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x297 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xDF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14B PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE9 PUSH2 0x609 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x62A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x661 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x1D2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD51 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD84 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x129 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D7 PUSH2 0x901 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP2 SWAP1 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH22 0x1000000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x30C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH22 0xFF000000000000000000000000000000000000000000 NOT AND PUSH22 0x1000000000000000000000000000000000000000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x34D PUSH2 0x973 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP2 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3CA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x43A PUSH2 0x973 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD LT ISZERO PUSH2 0x509 JUMPI DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4AC SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP4 DUP7 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x99A JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP1 DUP4 SSTORE SWAP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH2 0x100 SWAP2 DUP3 SWAP1 DIV AND MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP5 ADD PUSH1 0xA0 SWAP1 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP5 ADD DUP4 DUP2 MSTORE SWAP1 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH22 0xFF000000000000000000000000000000000000000000 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x6A7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 DUP8 DUP10 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE SWAP2 DUP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF DUP2 AND SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x303 SWAP1 PUSH2 0xDD7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 DUP4 DUP6 ADD MSTORE CALLER PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x857 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0xA1F JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x60 SWAP1 SWAP5 ADD MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x100 MUL PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP3 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND CALLER OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x968 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94A JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x9D3 JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA0F JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9F4 JUMP JUMPDEST POP PUSH2 0xA1B SWAP3 SWAP2 POP PUSH2 0xA8D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xA60 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xA0F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xA0F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xA0F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x970 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 CALLDATALOAD PUSH2 0xE61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 ADD DUP4 SGT PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xADE PUSH2 0xAD9 DUP3 PUSH2 0xE2F JUMP JUMPDEST PUSH2 0xE08 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB05 DUP4 DUP3 DUP5 PUSH2 0xE7D JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB3 DUP3 CALLDATALOAD PUSH2 0x970 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP5 DUP5 PUSH2 0xAA7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB38 DUP5 DUP3 DUP6 ADD PUSH2 0xABA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB38 DUP5 DUP5 PUSH2 0xB0E JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAD DUP3 PUSH2 0xE5D JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xBBF DUP4 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xBEF JUMPI PUSH2 0xBD5 DUP7 DUP4 MLOAD PUSH2 0xB93 JUMP JUMPDEST PUSH2 0xBDE DUP3 PUSH2 0xE57 JUMP JUMPDEST PUSH1 0x20 SWAP7 SWAP1 SWAP7 ADD SWAP6 SWAP2 POP PUSH1 0x1 ADD PUSH2 0xBC2 JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0D DUP3 PUSH2 0xE5D JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0xC21 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE89 JUMP JUMPDEST PUSH2 0xC2A DUP2 PUSH2 0xEB9 JUMP JUMPDEST SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH32 0x526567697374726174696F6E206861736E277420656E64656420796574000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP2 MSTORE PUSH32 0x526567697374726174696F6E7320617265206E6F74206F70656E207269676874 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x206E6F7700000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x43616E6469646174652068617320616C72656164792072656769737465726564 SWAP1 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP1 DUP5 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xD05 DUP3 DUP3 PUSH2 0xC02 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xD1A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xD48 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0xD2D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0xBF9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0xD40 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0xB93 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xB9C DUP2 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD5F DUP3 DUP5 PUSH2 0xB93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAB3 DUP2 DUP5 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xD5F DUP3 DUP5 PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x80 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD95 DUP2 DUP8 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP PUSH2 0xDA4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD48 JUMP JUMPDEST PUSH2 0xDB1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBF9 JUMP JUMPDEST PUSH2 0xDBE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xB93 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xC67 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xD5F DUP2 PUSH2 0xCBD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAB3 DUP2 DUP5 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F DUP3 PUSH2 0xE71 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEA4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE8C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0x4c CALLER SWAP4 0xc8 0xc2 BALANCE MUL PUSH13 0x1A2536867BB4F2A087EE54F95D 0xe8 0xce RETURNDATASIZE DELEGATECALL 0xed ADD SLT CODECOPY 0x4c SWAP4 EXTCODECOPY PUSH13 0x6578706572696D656E74616CF5 STOP CALLDATACOPY ",
                        "sourceMap": "58:2234:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;401:40:0;;;;;;;;;;;;;;;;;;;;;;;;;290:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:27:0;;;;1554:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1554:142:0;;;;;;1034:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1034:133:0;;;;;;;;;;;;;;;;;1817:394;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1817:394:0;;;;;;;;;246:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:38:0;;;;942:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;942:89:0;;;;2217:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2217:72:0;;;;447:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;447:35:0;;;;;;;;;;;;;;;;;324:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:23:0;;;;;;;;;;;;;;;1173:375;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1173:375:0;;;;;;;;;220:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;220:20:0;;;;1702:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1702:109:0;;;;;;;;;;;;401:40;;;;;;;;;;;;;;;:::o;290:27::-;;;;;;;;;:::o;1554:142::-;637:5;;-1:-1:-1;;;;;637:5:0;623:10;:19;615:28;;;;;;1613:18;;;;;;;1612:19;1604:61;;;;;;;;;;;;;;;;;;;;;;1675:7;:14;;-1:-1:-1;;1675:14:0;;;;;1554:142::o;1034:133::-;1101:16;;:::i;:::-;-1:-1:-1;;;;;1132:22:0;;;;;;:10;:22;;;;;;;;;1125:29;;;;;;;;;;;-1:-1:-1;;1125:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:22;;1125:29;;1132:22;;1125:29;;;1132:22;1125:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1125:29:0;;;-1:-1:-1;;1125:29:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1125:29:0;;;;;;;1034:133;-1:-1:-1;;1034:133:0:o;1817:394::-;1897:16;;:::i;:::-;723:10;714:20;;;;:8;:20;;;;;;;;713:21;705:30;;;;;;-1:-1:-1;;;;;1957:31:0;;1927:27;1957:31;;;:10;:31;;;;;2021:1;1998:19;;;:24;;;;;;;;;2036:16;;:38;2032:87;;;2090:18;;2099:9;;2090:6;;:18;;:6;;2099:9;;2090:18;-1:-1:-1;;2090:18:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2090:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2090:18:0;;;;;;;;;;;;-1:-1:-1;;;;;2090:18:0;;;;;;;-1:-1:-1;;2090:18:0;;;;;;2032:87;2137:10;2128:20;;;;:8;:20;;;;;;;;:27;;2151:4;-1:-1:-1;;2128:27:0;;;;;;;;-1:-1:-1;;;;;2173:31:0;;;;:10;:31;;;;;;2165:39;;;;;2128:27;2165:39;;;;;;;;-1:-1:-1;;2165:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:31;;2165:39;;2173:31;;2165:39;;;2173:31;2165:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2165:39:0;;;-1:-1:-1;;2165:39:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2165:39:0;;;;;;;1817:394;-1:-1:-1;;;1817:394:0:o;246:38::-;;;;;;;;;:::o;942:89::-;637:5;;-1:-1:-1;;;;;637:5:0;623:10;:19;615:28;;;;;;1019:5;998:26;;-1:-1:-1;;998:26:0;;;942:89::o;2217:72::-;637:5;;-1:-1:-1;;;;;637:5:0;623:10;:19;615:28;;;;;;2277:5;2267:15;;-1:-1:-1;;2267:15:0;;;2217:72::o;447:35::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;447:35:0;;-1:-1:-1;447:35:0;:::o;324:23::-;;;;;;;;;;-1:-1:-1;;324:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;324:23:0;;;;;;;;;;;;;;;;-1:-1:-1;324:23:0;;;-1:-1:-1;;;;;324:23:0;;:::o;1173:375::-;835:10;824:22;;;;:10;:22;;;;;:36;;;;;823:37;802:116;;;;;;;;;;;;;;1261:18;;;;;;;1253:67;;;;;;;;;;;;;;;;1355:141;;;;;;;;;;;-1:-1:-1;1355:141:0;;;;;;;1445:4;1355:141;;;;1475:10;1355:141;;;;;;1330:22;;:10;:22;;;;;:166;;;;1355:141;;1330:22;;:166;;:22;;:166;;;:::i;:::-;-1:-1:-1;1330:166:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1330:166:0;;;-1:-1:-1;;1330:166:0;;;-1:-1:-1;;1330:166:0;;;;;;;;;;;;;;;;;1506:18;27:10:-1;;23:18;;;45:23;;1330:166:0;1506:35;;;;;-1:-1:-1;;1506:35:0;1530:10;1506:35;;;-1:-1:-1;1173:375:0:o;220:20::-;;;-1:-1:-1;;;;;220:20:0;;:::o;1702:109::-;1751:16;1786:18;1779:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1779:25:0;;;;;;;;;;;;;;;;;;;;;;;1702:109;;:::o;58:2234::-;;;;;;;;;;;;;-1:-1:-1;58:2234:0;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;58:2234:0;;;-1:-1:-1;58:2234:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:118:-1;;72:46;110:6;97:20;72:46;;;63:55;57:66;-1:-1;;;57:66;131:442;;226:4;214:17;;210:27;-1:-1;200:2;;251:1;248;241:12;200:2;288:6;275:20;310:65;325:49;367:6;325:49;;;310:65;;;301:74;;395:6;388:5;381:21;431:4;423:6;419:17;464:4;457:5;453:16;499:3;490:6;485:3;481:16;478:25;475:2;;;516:1;513;506:12;475:2;526:41;560:6;555:3;550;526:41;;;193:380;;;;;;;;581:118;;648:46;686:6;673:20;648:46;;706:241;;810:2;798:9;789:7;785:23;781:32;778:2;;;826:1;823;816:12;778:2;861:1;878:53;923:7;903:9;878:53;;;868:63;772:175;-1:-1;;;;772:175;954:347;;1068:2;1056:9;1047:7;1043:23;1039:32;1036:2;;;1084:1;1081;1074:12;1036:2;1119:31;;1170:18;1159:30;;1156:2;;;1202:1;1199;1192:12;1156:2;1222:63;1277:7;1268:6;1257:9;1253:22;1222:63;;1308:241;;1412:2;1400:9;1391:7;1387:23;1383:32;1380:2;;;1428:1;1425;1418:12;1380:2;1463:1;1480:53;1525:7;1505:9;1480:53;;1556:110;1629:31;1654:5;1629:31;;;1624:3;1617:44;1611:55;;;1704:590;;1839:54;1887:5;1839:54;;;1911:6;1906:3;1899:19;1935:4;1930:3;1926:14;1919:21;;1980:56;2030:5;1980:56;;;2057:1;2042:230;2067:6;2064:1;2061:13;2042:230;;;2107:53;2156:3;2147:6;2141:13;2107:53;;;2177:60;2230:6;2177:60;;;2260:4;2251:14;;;;;2167:70;-1:-1;2089:1;2082:9;2042:230;;;-1:-1;2285:3;;1818:476;-1:-1;;;;1818:476;2302:101;2369:28;2391:5;2369:28;;2410:292;;2508:35;2537:5;2508:35;;;2560:6;2555:3;2548:19;2572:63;2628:6;2621:4;2616:3;2612:14;2605:4;2598:5;2594:16;2572:63;;;2667:29;2689:6;2667:29;;;2647:50;;;2660:4;2647:50;;2488:214;-1:-1;;;2488:214;2710:296;2865:2;2853:15;;2902:66;2897:2;2888:12;;2881:88;2997:2;2988:12;;2846:160;3015:397;3170:2;3158:15;;3207:66;3202:2;3193:12;;3186:88;3308:66;3303:2;3294:12;;3287:88;3403:2;3394:12;;3151:261;3421:296;3576:2;3564:15;;;3613:66;3599:12;;;3592:88;3708:2;3699:12;;3557:160;3792:920;4002:22;;3933:4;4036:37;;;3792:920;;3924:14;;;;4088:68;3924:14;4002:22;4088:68;;;4080:76;;3953:215;4249:4;4242:5;4238:16;4232:23;4267:62;4323:4;4318:3;4314:14;4301:11;4267:62;;;4178:163;4426:4;4419:5;4415:16;4409:23;4444:56;4494:4;4489:3;4485:14;4472:11;4444:56;;;4351:161;4594:4;4587:5;4583:16;4577:23;4612:62;4668:4;4663:3;4659:14;4646:11;4612:62;;;-1:-1;4703:4;3906:806;-1:-1;;;3906:806;4719:110;4792:31;4817:5;4792:31;;4836:193;4944:2;4929:18;;4958:61;4933:9;4992:6;4958:61;;;4915:114;;;;;5036:341;5194:2;5208:47;;;5179:18;;5269:98;5179:18;5353:6;5269:98;;5384:181;5486:2;5471:18;;5500:55;5475:9;5528:6;5500:55;;5572:565;5774:3;5789:47;;;5759:19;;5850:64;5759:19;5900:6;5850:64;;;5842:72;;5925:62;5983:2;5972:9;5968:18;5959:6;5925:62;;;5998:56;6050:2;6039:9;6035:18;6026:6;5998:56;;;6065:62;6123:2;6112:9;6108:18;6099:6;6065:62;;;5745:392;;;;;;;;6144:387;6325:2;6339:47;;;6310:18;;6400:121;6310:18;6400:121;;6538:387;6719:2;6733:47;;;6704:18;;6794:121;6704:18;6794:121;;6932:387;7113:2;7127:47;;;7098:18;;7188:121;7098:18;7188:121;;7326:341;7484:2;7498:47;;;7469:18;;7559:98;7469:18;7643:6;7559:98;;7674:256;7736:2;7730:9;7762:17;;;7837:18;7822:34;;7858:22;;;7819:62;7816:2;;;7894:1;7891;7884:12;7816:2;7910;7903:22;7714:216;;-1:-1;7714:216;7937:259;;8081:18;8073:6;8070:30;8067:2;;;8113:1;8110;8103:12;8067:2;-1:-1;8186:4;8157;8134:17;;;;-1:-1;;8130:33;8176:15;;8004:192;8205:121;8314:4;8302:17;;8283:43;8335:107;8425:12;;8409:33;8675:105;;8744:31;8769:5;8744:31;;8787:92;8860:13;8853:21;;8836:43;8886:128;-1:-1;;;;;8955:54;;8938:76;9306:145;9387:6;9382:3;9377;9364:30;-1:-1;9443:1;9425:16;;9418:27;9357:94;9460:268;9525:1;9532:101;9546:6;9543:1;9540:13;9532:101;;;9613:11;;;9607:18;9594:11;;;9587:39;9568:2;9561:10;9532:101;;;9648:6;9645:1;9642:13;9639:2;;;9713:1;9704:6;9699:3;9695:16;9688:27;9639:2;9509:219;;;;;9736:97;9824:2;9804:14;-1:-1;;9800:28;;9784:49"
                    },
                    "gasEstimates": {
                        "creation": {
                            "codeDepositCost": "767400",
                            "executionCost": "41472",
                            "totalCost": "808872"
                        },
                        "external": {
                            "admin()": "infinite",
                            "canVote()": "530",
                            "candidateAddresses(uint256)": "infinite",
                            "closeRegistration()": "20777",
                            "closeVoting()": "20799",
                            "getCandidateData(address)": "infinite",
                            "getCandidateList()": "infinite",
                            "hasVoted(address)": "infinite",
                            "isRegistrationOpen()": "618",
                            "register(string)": "infinite",
                            "startVoting()": "20932",
                            "vote(address)": "infinite",
                            "winner()": "infinite"
                        }
                    },
                    "methodIdentifiers": {
                        "admin()": "f851a440",
                        "canVote()": "159e7064",
                        "candidateAddresses(uint256)": "d55d73c5",
                        "closeRegistration()": "7dc673bc",
                        "closeVoting()": "c631b292",
                        "getCandidateData(address)": "2a466ac7",
                        "getCandidateList()": "fdbc4006",
                        "hasVoted(address)": "09eef43e",
                        "isRegistrationOpen()": "7ab2af2b",
                        "register(string)": "f2c298be",
                        "startVoting()": "1ec6b60a",
                        "vote(address)": "6dd7d8ea",
                        "winner()": "dfbf53ae"
                    }
                },
                "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"canVote\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"startVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"ethAddress\",\"type\":\"address\"}],\"name\":\"getCandidateData\",\"outputs\":[{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"voteCount\",\"type\":\"uint256\"},{\"name\":\"hasRegistered\",\"type\":\"bool\"},{\"name\":\"ethAddress\",\"type\":\"address\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"candidateEthAddress\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"voteCount\",\"type\":\"uint256\"},{\"name\":\"hasRegistered\",\"type\":\"bool\"},{\"name\":\"ethAddress\",\"type\":\"address\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRegistrationOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeRegistration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"closeVoting\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidateAddresses\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"voteCount\",\"type\":\"uint256\"},{\"name\":\"hasRegistered\",\"type\":\"bool\"},{\"name\":\"ethAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCandidateList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/neeraj/starter_kit/src/contracts/EVMContract.sol\":\"EVMContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/neeraj/starter_kit/src/contracts/EVMContract.sol\":{\"keccak256\":\"0x3898a9c3a480149a60b1346a14f30208f659b39a75a26682456771545f2b7b49\",\"urls\":[\"bzzr://2de8565113c2463e83d7caf20cacf6de3720d37d279ed6443d65d15016935b89\"]}},\"version\":1}",
                "userdoc": {
                    "methods": {}
                }
            }
        }
    },
    "errors": [
        {
            "component": "general",
            "formattedMessage": "/home/neeraj/starter_kit/src/contracts/EVMContract.sol:2:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
            "message": "Experimental features are turned on. Do not use experimental features on live deployments.",
            "severity": "warning",
            "sourceLocation": {
                "end": 57,
                "file": "/home/neeraj/starter_kit/src/contracts/EVMContract.sol",
                "start": 24
            },
            "type": "Warning"
        }
    ],
    "sources": {
        "/home/neeraj/starter_kit/src/contracts/EVMContract.sol": {
            "ast": {
                "absolutePath": "/home/neeraj/starter_kit/src/contracts/EVMContract.sol",
                "exportedSymbols": {
                    "EVMContract": [
                        217
                    ]
                },
                "id": 218,
                "nodeType": "SourceUnit",
                "nodes": [
                    {
                        "id": 1,
                        "literals": [
                            "solidity",
                            "^",
                            "0.5",
                            ".0"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "0:23:0"
                    },
                    {
                        "id": 2,
                        "literals": [
                            "experimental",
                            "ABIEncoderV2"
                        ],
                        "nodeType": "PragmaDirective",
                        "src": "24:33:0"
                    },
                    {
                        "baseContracts": [],
                        "contractDependencies": [],
                        "contractKind": "contract",
                        "documentation": null,
                        "fullyImplemented": true,
                        "id": 217,
                        "linearizedBaseContracts": [
                            217
                        ],
                        "name": "EVMContract",
                        "nodeType": "ContractDefinition",
                        "nodes": [
                            {
                                "canonicalName": "EVMContract.Candidate",
                                "id": 11,
                                "members": [
                                    {
                                        "constant": false,
                                        "id": 4,
                                        "name": "name",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 11,
                                        "src": "112:11:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                        },
                                        "typeName": {
                                            "id": 3,
                                            "name": "string",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "112:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage_ptr",
                                                "typeString": "string"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 6,
                                        "name": "voteCount",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 11,
                                        "src": "133:14:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "typeName": {
                                            "id": 5,
                                            "name": "uint",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "133:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 8,
                                        "name": "hasRegistered",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 11,
                                        "src": "157:18:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "typeName": {
                                            "id": 7,
                                            "name": "bool",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "157:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    },
                                    {
                                        "constant": false,
                                        "id": 10,
                                        "name": "ethAddress",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 11,
                                        "src": "185:18:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "typeName": {
                                            "id": 9,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "185:7:0",
                                            "stateMutability": "nonpayable",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "value": null,
                                        "visibility": "internal"
                                    }
                                ],
                                "name": "Candidate",
                                "nodeType": "StructDefinition",
                                "scope": 217,
                                "src": "85:125:0",
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 13,
                                "name": "admin",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "220:20:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 12,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "220:7:0",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 16,
                                "name": "isRegistrationOpen",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "246:38:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 14,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "246:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "value": {
                                    "argumentTypes": null,
                                    "hexValue": "66616c7365",
                                    "id": 15,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "279:5:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "value": "false"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 19,
                                "name": "canVote",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "290:27:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                },
                                "typeName": {
                                    "id": 17,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "290:4:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    }
                                },
                                "value": {
                                    "argumentTypes": null,
                                    "hexValue": "66616c7365",
                                    "id": 18,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "312:5:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "value": "false"
                                },
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 21,
                                "name": "winner",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "324:23:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                    "typeString": "struct EVMContract.Candidate"
                                },
                                "typeName": {
                                    "contractScope": null,
                                    "id": 20,
                                    "name": "Candidate",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 11,
                                    "src": "324:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                        "typeString": "struct EVMContract.Candidate"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 25,
                                "name": "candidates",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "354:41:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                    "typeString": "mapping(address => struct EVMContract.Candidate)"
                                },
                                "typeName": {
                                    "id": 24,
                                    "keyType": {
                                        "id": 22,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "362:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "354:29:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                        "typeString": "mapping(address => struct EVMContract.Candidate)"
                                    },
                                    "valueType": {
                                        "contractScope": null,
                                        "id": 23,
                                        "name": "Candidate",
                                        "nodeType": "UserDefinedTypeName",
                                        "referencedDeclaration": 11,
                                        "src": "373:9:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                            "typeString": "struct EVMContract.Candidate"
                                        }
                                    }
                                },
                                "value": null,
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 29,
                                "name": "hasVoted",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "401:40:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                },
                                "typeName": {
                                    "id": 28,
                                    "keyType": {
                                        "id": 26,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "409:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "nodeType": "Mapping",
                                    "src": "401:24:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                        "typeString": "mapping(address => bool)"
                                    },
                                    "valueType": {
                                        "id": 27,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "420:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "constant": false,
                                "id": 32,
                                "name": "candidateAddresses",
                                "nodeType": "VariableDeclaration",
                                "scope": 217,
                                "src": "447:35:0",
                                "stateVariable": true,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[]"
                                },
                                "typeName": {
                                    "baseType": {
                                        "id": 30,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "447:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 31,
                                    "length": null,
                                    "nodeType": "ArrayTypeName",
                                    "src": "447:9:0",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                        "typeString": "address[]"
                                    }
                                },
                                "value": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 44,
                                    "nodeType": "Block",
                                    "src": "510:70:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 38,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 35,
                                                    "name": "admin",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 13,
                                                    "src": "520:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 36,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 232,
                                                        "src": "528:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 37,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "528:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address_payable",
                                                        "typeString": "address payable"
                                                    }
                                                },
                                                "src": "520:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "id": 39,
                                            "nodeType": "ExpressionStatement",
                                            "src": "520:18:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 42,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 40,
                                                    "name": "isRegistrationOpen",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 16,
                                                    "src": "548:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 41,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "569:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "548:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 43,
                                            "nodeType": "ExpressionStatement",
                                            "src": "548:25:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 45,
                                "implemented": true,
                                "kind": "constructor",
                                "modifiers": [],
                                "name": "",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 33,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "500:2:0"
                                },
                                "returnParameters": {
                                    "id": 34,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "510:0:0"
                                },
                                "scope": 217,
                                "src": "489:91:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 55,
                                    "nodeType": "Block",
                                    "src": "605:56:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "commonType": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        },
                                                        "id": 51,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 48,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 232,
                                                                "src": "623:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 49,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "623:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                            "argumentTypes": null,
                                                            "id": 50,
                                                            "name": "admin",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 13,
                                                            "src": "637:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "src": "623:19:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 47,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        235,
                                                        236
                                                    ],
                                                    "referencedDeclaration": 235,
                                                    "src": "615:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 52,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "615:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 53,
                                            "nodeType": "ExpressionStatement",
                                            "src": "615:28:0"
                                        },
                                        {
                                            "id": 54,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "653:1:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 56,
                                "name": "onlyAdmin",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 46,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "605:0:0"
                                },
                                "src": "586:75:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 67,
                                    "nodeType": "Block",
                                    "src": "695:58:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 63,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "713:21:0",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "baseExpression": {
                                                                "argumentTypes": null,
                                                                "id": 59,
                                                                "name": "hasVoted",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 29,
                                                                "src": "714:8:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                                    "typeString": "mapping(address => bool)"
                                                                }
                                                            },
                                                            "id": 62,
                                                            "indexExpression": {
                                                                "argumentTypes": null,
                                                                "expression": {
                                                                    "argumentTypes": null,
                                                                    "id": 60,
                                                                    "name": "msg",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 232,
                                                                    "src": "723:3:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_message",
                                                                        "typeString": "msg"
                                                                    }
                                                                },
                                                                "id": 61,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "memberName": "sender",
                                                                "nodeType": "MemberAccess",
                                                                "referencedDeclaration": null,
                                                                "src": "723:10:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_address_payable",
                                                                    "typeString": "address payable"
                                                                }
                                                            },
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "nodeType": "IndexAccess",
                                                            "src": "714:20:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    ],
                                                    "id": 58,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        235,
                                                        236
                                                    ],
                                                    "referencedDeclaration": 235,
                                                    "src": "705:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                        "typeString": "function (bool) pure"
                                                    }
                                                },
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "705:30:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 65,
                                            "nodeType": "ExpressionStatement",
                                            "src": "705:30:0"
                                        },
                                        {
                                            "id": 66,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "745:1:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 68,
                                "name": "hasNotVotedEarlier",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 57,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "695:0:0"
                                },
                                "src": "667:86:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 81,
                                    "nodeType": "Block",
                                    "src": "792:144:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 76,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "823:37:0",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "baseExpression": {
                                                                    "argumentTypes": null,
                                                                    "id": 71,
                                                                    "name": "candidates",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 25,
                                                                    "src": "824:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                                                        "typeString": "mapping(address => struct EVMContract.Candidate storage ref)"
                                                                    }
                                                                },
                                                                "id": 74,
                                                                "indexExpression": {
                                                                    "argumentTypes": null,
                                                                    "expression": {
                                                                        "argumentTypes": null,
                                                                        "id": 72,
                                                                        "name": "msg",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 232,
                                                                        "src": "835:3:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_message",
                                                                            "typeString": "msg"
                                                                        }
                                                                    },
                                                                    "id": 73,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberName": "sender",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": null,
                                                                    "src": "835:10:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_address_payable",
                                                                        "typeString": "address payable"
                                                                    }
                                                                },
                                                                "isConstant": false,
                                                                "isLValue": true,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "nodeType": "IndexAccess",
                                                                "src": "824:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                                }
                                                            },
                                                            "id": 75,
                                                            "isConstant": false,
                                                            "isLValue": true,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "hasRegistered",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": 8,
                                                            "src": "824:36:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "43616e6469646174652068617320616c72656164792072656769737465726564",
                                                        "id": 77,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "874:34:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_cc0af2c385441352613338a3e78c3f5b47322544a8975b2df0a1a8bb243d6f5e",
                                                            "typeString": "literal_string \"Candidate has already registered\""
                                                        },
                                                        "value": "Candidate has already registered"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_cc0af2c385441352613338a3e78c3f5b47322544a8975b2df0a1a8bb243d6f5e",
                                                            "typeString": "literal_string \"Candidate has already registered\""
                                                        }
                                                    ],
                                                    "id": 70,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        235,
                                                        236
                                                    ],
                                                    "referencedDeclaration": 236,
                                                    "src": "802:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 78,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "802:116:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 79,
                                            "nodeType": "ExpressionStatement",
                                            "src": "802:116:0"
                                        },
                                        {
                                            "id": 80,
                                            "nodeType": "PlaceholderStatement",
                                            "src": "928:1:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 82,
                                "name": "hasNotRegisteredEarlier",
                                "nodeType": "ModifierDefinition",
                                "parameters": {
                                    "id": 69,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "792:0:0"
                                },
                                "src": "759:177:0",
                                "visibility": "internal"
                            },
                            {
                                "body": {
                                    "id": 91,
                                    "nodeType": "Block",
                                    "src": "988:43:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 89,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 87,
                                                    "name": "isRegistrationOpen",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 16,
                                                    "src": "998:18:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 88,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1019:5:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "998:26:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 90,
                                            "nodeType": "ExpressionStatement",
                                            "src": "998:26:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 92,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 85,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 84,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 56,
                                            "src": "978:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "978:9:0"
                                    }
                                ],
                                "name": "closeRegistration",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 83,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "968:2:0"
                                },
                                "returnParameters": {
                                    "id": 86,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "988:0:0"
                                },
                                "scope": 217,
                                "src": "942:89:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 103,
                                    "nodeType": "Block",
                                    "src": "1118:49:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 99,
                                                    "name": "candidates",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "1132:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                                        "typeString": "mapping(address => struct EVMContract.Candidate storage ref)"
                                                    }
                                                },
                                                "id": 101,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 100,
                                                    "name": "ethAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 94,
                                                    "src": "1143:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1132:22:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 98,
                                            "id": 102,
                                            "nodeType": "Return",
                                            "src": "1125:29:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 104,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCandidateData",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 95,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 94,
                                            "name": "ethAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 104,
                                            "src": "1060:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 93,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1060:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1059:20:0"
                                },
                                "returnParameters": {
                                    "id": 98,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 97,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 104,
                                            "src": "1101:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Candidate_$11_memory_ptr",
                                                "typeString": "struct EVMContract.Candidate"
                                            },
                                            "typeName": {
                                                "contractScope": null,
                                                "id": 96,
                                                "name": "Candidate",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 11,
                                                "src": "1101:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                    "typeString": "struct EVMContract.Candidate"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1100:18:0"
                                },
                                "scope": 217,
                                "src": "1034:133:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 136,
                                    "nodeType": "Block",
                                    "src": "1243:305:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 112,
                                                        "name": "isRegistrationOpen",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 16,
                                                        "src": "1261:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "526567697374726174696f6e7320617265206e6f74206f70656e207269676874206e6f77",
                                                        "id": 113,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1281:38:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_5a18ba0abfb061def082fa315e082a3bf60f1e2373a930774de95533606ae1ca",
                                                            "typeString": "literal_string \"Registrations are not open right now\""
                                                        },
                                                        "value": "Registrations are not open right now"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_5a18ba0abfb061def082fa315e082a3bf60f1e2373a930774de95533606ae1ca",
                                                            "typeString": "literal_string \"Registrations are not open right now\""
                                                        }
                                                    ],
                                                    "id": 111,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        235,
                                                        236
                                                    ],
                                                    "referencedDeclaration": 236,
                                                    "src": "1253:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 114,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1253:67:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 115,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1253:67:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 127,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 116,
                                                        "name": "candidates",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 25,
                                                        "src": "1330:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                                            "typeString": "mapping(address => struct EVMContract.Candidate storage ref)"
                                                        }
                                                    },
                                                    "id": 119,
                                                    "indexExpression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 117,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 232,
                                                            "src": "1341:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 118,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "1341:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1330:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                        "typeString": "struct EVMContract.Candidate storage ref"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                        {
                                                            "argumentTypes": null,
                                                            "id": 121,
                                                            "name": "_name",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 106,
                                                            "src": "1385:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_string_memory_ptr",
                                                                "typeString": "string memory"
                                                            }
                                                        },
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "30",
                                                            "id": 122,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1415:1:0",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        },
                                                        {
                                                            "argumentTypes": null,
                                                            "hexValue": "74727565",
                                                            "id": 123,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "bool",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1445:4:0",
                                                            "subdenomination": null,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            "value": "true"
                                                        },
                                                        {
                                                            "argumentTypes": null,
                                                            "expression": {
                                                                "argumentTypes": null,
                                                                "id": 124,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 232,
                                                                "src": "1475:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 125,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "referencedDeclaration": null,
                                                            "src": "1475:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address_payable",
                                                                "typeString": "address payable"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 120,
                                                        "name": "Candidate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 11,
                                                        "src": "1355:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_struct$_Candidate_$11_storage_ptr_$",
                                                            "typeString": "type(struct EVMContract.Candidate storage pointer)"
                                                        }
                                                    },
                                                    "id": 126,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "structConstructorCall",
                                                    "lValueRequested": false,
                                                    "names": [
                                                        "name",
                                                        "voteCount",
                                                        "hasRegistered",
                                                        "ethAddress"
                                                    ],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1355:141:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Candidate_$11_memory",
                                                        "typeString": "struct EVMContract.Candidate memory"
                                                    }
                                                },
                                                "src": "1330:166:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                }
                                            },
                                            "id": 128,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1330:166:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 132,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 232,
                                                            "src": "1530:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 133,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "1530:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 129,
                                                        "name": "candidateAddresses",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 32,
                                                        "src": "1506:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                            "typeString": "address[] storage ref"
                                                        }
                                                    },
                                                    "id": 131,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "push",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "1506:23:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                                                        "typeString": "function (address) returns (uint256)"
                                                    }
                                                },
                                                "id": 134,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1506:35:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 135,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1506:35:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 137,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 109,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 108,
                                            "name": "hasNotRegisteredEarlier",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82,
                                            "src": "1219:23:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1219:23:0"
                                    }
                                ],
                                "name": "register",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 107,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 106,
                                            "name": "_name",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 137,
                                            "src": "1191:19:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 105,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1191:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1190:21:0"
                                },
                                "returnParameters": {
                                    "id": 110,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1243:0:0"
                                },
                                "scope": 217,
                                "src": "1173:375:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 152,
                                    "nodeType": "Block",
                                    "src": "1594:102:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "arguments": [
                                                    {
                                                        "argumentTypes": null,
                                                        "id": 144,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "UnaryOperation",
                                                        "operator": "!",
                                                        "prefix": true,
                                                        "src": "1612:19:0",
                                                        "subExpression": {
                                                            "argumentTypes": null,
                                                            "id": 143,
                                                            "name": "isRegistrationOpen",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 16,
                                                            "src": "1613:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    {
                                                        "argumentTypes": null,
                                                        "hexValue": "526567697374726174696f6e206861736e277420656e64656420796574",
                                                        "id": 145,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "string",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1633:31:0",
                                                        "subdenomination": null,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_stringliteral_309534dca41cd997fb9207447c59cc85b6929d5eddc429a645e872e192ef7f1c",
                                                            "typeString": "literal_string \"Registration hasn't ended yet\""
                                                        },
                                                        "value": "Registration hasn't ended yet"
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        },
                                                        {
                                                            "typeIdentifier": "t_stringliteral_309534dca41cd997fb9207447c59cc85b6929d5eddc429a645e872e192ef7f1c",
                                                            "typeString": "literal_string \"Registration hasn't ended yet\""
                                                        }
                                                    ],
                                                    "id": 142,
                                                    "name": "require",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [
                                                        235,
                                                        236
                                                    ],
                                                    "referencedDeclaration": 236,
                                                    "src": "1604:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                        "typeString": "function (bool,string memory) pure"
                                                    }
                                                },
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1604:61:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_tuple$__$",
                                                    "typeString": "tuple()"
                                                }
                                            },
                                            "id": 147,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1604:61:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 150,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 148,
                                                    "name": "canVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 19,
                                                    "src": "1675:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 149,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1685:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "1675:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 151,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1675:14:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 153,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 140,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 139,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 56,
                                            "src": "1584:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1584:9:0"
                                    }
                                ],
                                "name": "startVoting",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 138,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1574:2:0"
                                },
                                "returnParameters": {
                                    "id": 141,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1594:0:0"
                                },
                                "scope": 217,
                                "src": "1554:142:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 161,
                                    "nodeType": "Block",
                                    "src": "1769:42:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 159,
                                                "name": "candidateAddresses",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 32,
                                                "src": "1786:18:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                    "typeString": "address[] storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 158,
                                            "id": 160,
                                            "nodeType": "Return",
                                            "src": "1779:25:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 162,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [],
                                "name": "getCandidateList",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 154,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "1727:2:0"
                                },
                                "returnParameters": {
                                    "id": 158,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 157,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 162,
                                            "src": "1751:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[]"
                                            },
                                            "typeName": {
                                                "baseType": {
                                                    "id": 155,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1751:7:0",
                                                    "stateMutability": "nonpayable",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "id": 156,
                                                "length": null,
                                                "nodeType": "ArrayTypeName",
                                                "src": "1751:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                                    "typeString": "address[]"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1749:19:0"
                                },
                                "scope": 217,
                                "src": "1702:109:0",
                                "stateMutability": "view",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 205,
                                    "nodeType": "Block",
                                    "src": "1917:294:0",
                                    "statements": [
                                        {
                                            "assignments": [
                                                172
                                            ],
                                            "declarations": [
                                                {
                                                    "constant": false,
                                                    "id": 172,
                                                    "name": "candidate",
                                                    "nodeType": "VariableDeclaration",
                                                    "scope": 205,
                                                    "src": "1927:27:0",
                                                    "stateVariable": false,
                                                    "storageLocation": "storage",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                        "typeString": "struct EVMContract.Candidate"
                                                    },
                                                    "typeName": {
                                                        "contractScope": null,
                                                        "id": 171,
                                                        "name": "Candidate",
                                                        "nodeType": "UserDefinedTypeName",
                                                        "referencedDeclaration": 11,
                                                        "src": "1927:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                            "typeString": "struct EVMContract.Candidate"
                                                        }
                                                    },
                                                    "value": null,
                                                    "visibility": "internal"
                                                }
                                            ],
                                            "id": 176,
                                            "initialValue": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 173,
                                                    "name": "candidates",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "1957:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                                        "typeString": "mapping(address => struct EVMContract.Candidate storage ref)"
                                                    }
                                                },
                                                "id": 175,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 174,
                                                    "name": "candidateEthAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 164,
                                                    "src": "1968:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "1957:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                }
                                            },
                                            "nodeType": "VariableDeclarationStatement",
                                            "src": "1927:61:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 181,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 177,
                                                        "name": "candidate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 172,
                                                        "src": "1998:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                            "typeString": "struct EVMContract.Candidate storage pointer"
                                                        }
                                                    },
                                                    "id": 179,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberName": "voteCount",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 6,
                                                    "src": "1998:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "+=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "31",
                                                    "id": 180,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2021:1:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "1998:24:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "id": 182,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1998:24:0"
                                        },
                                        {
                                            "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 187,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 183,
                                                        "name": "winner",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 21,
                                                        "src": "2036:6:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                            "typeString": "struct EVMContract.Candidate storage ref"
                                                        }
                                                    },
                                                    "id": 184,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "voteCount",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 6,
                                                    "src": "2036:16:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<",
                                                "rightExpression": {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                        "argumentTypes": null,
                                                        "id": 185,
                                                        "name": "candidate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 172,
                                                        "src": "2055:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                            "typeString": "struct EVMContract.Candidate storage pointer"
                                                        }
                                                    },
                                                    "id": 186,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "voteCount",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 6,
                                                    "src": "2055:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2036:38:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "falseBody": null,
                                            "id": 193,
                                            "nodeType": "IfStatement",
                                            "src": "2032:87:0",
                                            "trueBody": {
                                                "id": 192,
                                                "nodeType": "Block",
                                                "src": "2076:43:0",
                                                "statements": [
                                                    {
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 190,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                                "argumentTypes": null,
                                                                "id": 188,
                                                                "name": "winner",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 21,
                                                                "src": "2090:6:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                                }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                                "argumentTypes": null,
                                                                "id": 189,
                                                                "name": "candidate",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 172,
                                                                "src": "2099:9:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                                    "typeString": "struct EVMContract.Candidate storage pointer"
                                                                }
                                                            },
                                                            "src": "2090:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                                "typeString": "struct EVMContract.Candidate storage ref"
                                                            }
                                                        },
                                                        "id": 191,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2090:18:0"
                                                    }
                                                ]
                                            }
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 199,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 194,
                                                        "name": "hasVoted",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 29,
                                                        "src": "2128:8:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 197,
                                                    "indexExpression": {
                                                        "argumentTypes": null,
                                                        "expression": {
                                                            "argumentTypes": null,
                                                            "id": 195,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 232,
                                                            "src": "2137:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 196,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": null,
                                                        "src": "2137:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address_payable",
                                                            "typeString": "address payable"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2128:20:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "74727565",
                                                    "id": 198,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2151:4:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "true"
                                                },
                                                "src": "2128:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 200,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2128:27:0"
                                        },
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 201,
                                                    "name": "candidates",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 25,
                                                    "src": "2173:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Candidate_$11_storage_$",
                                                        "typeString": "mapping(address => struct EVMContract.Candidate storage ref)"
                                                    }
                                                },
                                                "id": 203,
                                                "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 202,
                                                    "name": "candidateEthAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 164,
                                                    "src": "2184:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2173:31:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage",
                                                    "typeString": "struct EVMContract.Candidate storage ref"
                                                }
                                            },
                                            "functionReturnParameters": 170,
                                            "id": 204,
                                            "nodeType": "Return",
                                            "src": "2165:39:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 206,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 167,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 166,
                                            "name": "hasNotVotedEarlier",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 68,
                                            "src": "1868:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "1868:18:0"
                                    }
                                ],
                                "name": "vote",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 165,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 164,
                                            "name": "candidateEthAddress",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 206,
                                            "src": "1831:27:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            },
                                            "typeName": {
                                                "id": 163,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1831:7:0",
                                                "stateMutability": "nonpayable",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1830:29:0"
                                },
                                "returnParameters": {
                                    "id": 170,
                                    "nodeType": "ParameterList",
                                    "parameters": [
                                        {
                                            "constant": false,
                                            "id": 169,
                                            "name": "",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 206,
                                            "src": "1897:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Candidate_$11_memory_ptr",
                                                "typeString": "struct EVMContract.Candidate"
                                            },
                                            "typeName": {
                                                "contractScope": null,
                                                "id": 168,
                                                "name": "Candidate",
                                                "nodeType": "UserDefinedTypeName",
                                                "referencedDeclaration": 11,
                                                "src": "1897:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Candidate_$11_storage_ptr",
                                                    "typeString": "struct EVMContract.Candidate"
                                                }
                                            },
                                            "value": null,
                                            "visibility": "internal"
                                        }
                                    ],
                                    "src": "1895:19:0"
                                },
                                "scope": 217,
                                "src": "1817:394:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            },
                            {
                                "body": {
                                    "id": 215,
                                    "nodeType": "Block",
                                    "src": "2257:32:0",
                                    "statements": [
                                        {
                                            "expression": {
                                                "argumentTypes": null,
                                                "id": 213,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                    "argumentTypes": null,
                                                    "id": 211,
                                                    "name": "canVote",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 19,
                                                    "src": "2267:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                    "argumentTypes": null,
                                                    "hexValue": "66616c7365",
                                                    "id": 212,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "bool",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2277:5:0",
                                                    "subdenomination": null,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    },
                                                    "value": "false"
                                                },
                                                "src": "2267:15:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            "id": 214,
                                            "nodeType": "ExpressionStatement",
                                            "src": "2267:15:0"
                                        }
                                    ]
                                },
                                "documentation": null,
                                "id": 216,
                                "implemented": true,
                                "kind": "function",
                                "modifiers": [
                                    {
                                        "arguments": null,
                                        "id": 209,
                                        "modifierName": {
                                            "argumentTypes": null,
                                            "id": 208,
                                            "name": "onlyAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 56,
                                            "src": "2247:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_modifier$__$",
                                                "typeString": "modifier ()"
                                            }
                                        },
                                        "nodeType": "ModifierInvocation",
                                        "src": "2247:9:0"
                                    }
                                ],
                                "name": "closeVoting",
                                "nodeType": "FunctionDefinition",
                                "parameters": {
                                    "id": 207,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2237:2:0"
                                },
                                "returnParameters": {
                                    "id": 210,
                                    "nodeType": "ParameterList",
                                    "parameters": [],
                                    "src": "2257:0:0"
                                },
                                "scope": 217,
                                "src": "2217:72:0",
                                "stateMutability": "nonpayable",
                                "superFunction": null,
                                "visibility": "public"
                            }
                        ],
                        "scope": 218,
                        "src": "58:2234:0"
                    }
                ],
                "src": "0:2293:0"
            },
            "id": 0
        }
    }
}